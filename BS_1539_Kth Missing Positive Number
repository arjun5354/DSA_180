// Approach-1
class Solution {
public:
    int findKthPositive(vector<int>& arr, int k) {
        int l=0,h=arr.size()-1;
        while(l<=h){
            int mid= (l+h)/2;
            int missing=arr[mid]-(mid+1);
            if(missing<k) l=mid+1;
            else h=mid-1;
        }
        return k+l;
        // return k+h+1;
    }
};

// Approach-2
class Solution {
public:
    int findKthPositive(vector<int>& arr, int k) {
        int s=0;
        int e=arr.size()-1;
        int mid=s+(e-s)/2;
        int ans=arr.size();
        while(s<=e){
            if(arr[mid]-mid-1<k) s=mid+1;
            else{
                ans=mid;
                e=mid-1;
            }
            mid=s+(e-s)/2;
        }
        return ans+k;
    }
};
